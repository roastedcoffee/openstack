Step to deploy Openstack using Kolla-Ansible-

https://docs.openstack.org/project-deploy-guide/kolla-ansible/victoria/

Kolla-Ansible

sudo apt-get update
sudo apt-get install python3-dev libffi-dev gcc libssl-dev -y
sudo apt-get install python3-pip -y
sudo pip3 install -U pip
sudo apt-get install ansible -y
sudo pip3 install kolla-ansible
sudo mkdir -p /etc/kolla
sudo chown $user:$user /etc/kolla
cp -r /usr/local/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
cp /usr/local/share/kolla-ansible/ansible/inventory/* .

git clone --branch stable/victoria https://github.com/openstack/kolla
git clone --branch stable/victoria https://github.com/openstack/kolla-ansible

! Master branch (Use above victoria) 

git clone https://github.com/openstack/kolla
git clone https://github.com/openstack/kolla-ansible

sudo pip3 install ./kolla
sudo pip3 install ./kolla-ansible

sudo mkdir -p /etc/kolla
sudo chown $user:$user /etc/kolla

cp -r kolla-ansible/etc/kolla/* /etc/kolla
cp kolla-ansible/ansible/inventory/* .



sudo nano /etc/ansible/ansible.cfg
[defaults]
host_key_checking=False
pipelining=True
forks=100

apt install docker.io -y

docker run -d \
--name registry \
--restart=always \
-p 4000:5000 \
-v registry:/var/lib/registry \
-e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io \
registry:2

Edit globals.yml and add the following, where 192.168.1.100:4000 is the IP address and port on which the registry is listening:

docker_custom_config:
  registry-mirrors:
    - http://192.168.122.1:4000



sudo nano /etc/kolla/globals.yml

crudini --set /etc/kolla/globals.yml 'config_strategy: “COPY_ALWAYS”'
sudo crudini --set --existing /etc/kolla/globals.yml config_strategy parameter COPY_ALWAYS

api_interface: "{{ network_interface }}"
config_strategy: “COPY_ALWAYS”
kolla_base_distro: “ubuntu”
kolla_install_type: “binary”
kolla_release: “victoria”
kolla_internal_vip_address: “192.168.150.250”
network_interface: “eth1”
neutron_external_interface: “eth2”
neutron_plugin_agent: “openvswitch”
keepalived_virtual_router_id: “51”
nova_console: “novnc”
enable_cinder: “yes”
enable_cinder_backup: “no”
enable_cinder_backend_iscsi: “yes”
enable_cinder_backend_lvm: “yes”
enable_ha_proxy: “yes”
enable_heat: “yes”
enable_horizon: “yes”
enable_openvswitch: “{{ neutron_plugin_agent != ‘linuxbridge’ }}”
keystone_token_provider: “fernet”
fernet_token_expiry: 86400
glance_backend_file: “yes”
cinder_volume_group: “cinder-volumes”
nova_compute_virt_type: “kvm”

sudo nano multinode

[control]
# These hostname must be resolvable from your deployment host
controller01 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa
controller02 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa
controller03 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa

[network]
controller01 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa
controller02 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa
controller03 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa

[compute]
compute01 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa
compute02 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa
compute03 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa

[storage]
storage01 ansible_user=openstack ansible_become=true ansible_private_key_file=/root/.ssh/id_rsa

[deployment]
localhost       ansible_connection=local become=true


#ansible -i multinode all -m ping --extra-vars "ansible_sudo_pass=vinod"
ansible -i multinode all -m ping

Running Kolla-Ansible Deployment

1. Generate Kolla-Ansible passwords: # 

kolla-genpwd

2. Bootstrap Nodes:

kolla-ansible -vi multinode bootstrap-servers 

kolla-ansible -vvvi multinode bootstrap-servers -e 'ansible_python_interpreter=/usr/bin/python3'

3. Run pre-deployment checks:

kolla-ansible -vi multinode prechecks

4. Run Deployment:

kolla-ansible -vi multinode deploy

5. Verify that containers are up, not restarting:
docker ps -a


Finalize Deployment
1. Run Kolla Post Deploy script: # 

kolla-ansible post-deploy

2. Install OpenStack Client:

pip install python-openstackclient

3. Populate OpenStack with initial set up:

kolla-ansible post-deploy


Controllers

pip install python-openstackclient

. /etc/kolla/admin-openrc.sh
vim /usr/local/share/kolla-ansible/init-runonce
. /etc/kolla/admin-openrc.sh
cd /usr/local/share/kolla-ansible
./init-runonce

/usr/local/share/kolla-ansible/init-runonce

Verification and Using the OpenStack
1. Check the admin password:

grep keystone_admin_password /etc/kolla/passwords.yml

2. Open browser and go to 192.168.150.128, login as admin

aVn5xbTzDmZdBxU2DhY0jU8ksw3dcfwAQq8PSuWd

Keystone-
ZR6YiDkk7aO0j7DvPUQ7YzTmnxoTFqhUhArRJ0Op


Example of Endpoints -
Service     Service Endpoint
Cloudformation    http://192.168.150.250:8000/v1
Compute     http://192.168.150.250:8774/v2.1
Compute_Legacy    http://192.168.150.250:8774/v2/d1c3540bfedd4f20b933d0cba01078e4
Identity    http://192.168.150.250:5000
Image http://192.168.150.250:9292
Network     http://192.168.150.250:9696
Orchestration     http://192.168.150.250:8004/v1/d1c3540bfedd4f20b933d0cba01078e4
Placement   http://192.168.150.250:8780
Volumev2    http://192.168.150.250:8776/v2/d1c3540bfedd4f20b933d0cba01078e4
Volumev3    http://192.168.150.250:8776/v3/d1c3540bfedd4f20b933d0cba01078e4

Example of Admin-rc environment –


export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=HDeB03UUQfAfprgkVUSFnfq7w7scSnVmDiXPKi1F
export OS_AUTH_URL=http://controller01:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2
<<
